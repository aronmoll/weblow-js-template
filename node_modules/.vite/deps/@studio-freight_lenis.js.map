{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/nanoevents.js", "../../@studio-freight/lenis/src/index.js", "dep:@studio-freight_lenis"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n", "import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n", "export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n", "import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor(wrapper, content) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (this.wrapper === window) {\n      window.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperResizeObserver = new ResizeObserver(\n        debounce(this.onWrapperResize, 100)\n      )\n      this.wrapperResizeObserver.observe(this.wrapper)\n      this.onWrapperResize()\n    }\n\n    this.contentResizeObserver = new ResizeObserver(\n      debounce(this.onContentResize, 100)\n    )\n    this.contentResizeObserver.observe(this.content)\n    this.onContentResize()\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  onWrapperResize = () => {\n    this.width = this.wrapper.clientWidth\n    this.height = this.wrapper.clientHeight\n  }\n\n  onContentResize = () => {\n    const element =\n      this.wrapper === window ? document.documentElement : this.wrapper\n    this.scrollHeight = element.scrollHeight\n    this.scrollWidth = element.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n", "import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      inertia: true,\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n", "export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n", "import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    syncTouch = false,\n    syncTouchLerp = 0.1,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = false,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      smoothWheel,\n      smoothTouch,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.dimensions = new Dimensions(wrapper, content)\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = type === 'touch'\n    const isWheel = type === 'wheel'\n\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\n      (isTouch &&\n        this.options.gestureOrientation === 'vertical' &&\n        this.scroll === 0 &&\n        !this.options.infinite &&\n        deltaY <= 0) // touch pull to refresh\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch && {\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\n      }),\n    })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? this.options.content\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n", "import d from \"./node_modules/@studio-freight/lenis/dist/lenis.mjs\";export default d;"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "_proto", "prototype", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "amt", "completed", "lerp", "value", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "_ref", "_ref$lerp", "_ref$duration", "_ref$easing", "t", "debounce", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "Dimensions", "wrapper", "content", "_this", "onWindowResize", "width", "window", "innerWidth", "height", "innerHeight", "onWrapperResize", "clientWidth", "clientHeight", "onContentResize", "element", "document", "documentElement", "scrollHeight", "scrollWidth", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "removeEventListener", "disconnect", "_createClass", "key", "get", "x", "y", "VirtualScroll", "_ref$wheelMultiplier", "wheelMultiplier", "_ref$touchMultiplier", "touchMultiplier", "_ref$normalizeWheel", "normalizeWheel", "onTouchStart", "event", "_ref2", "targetTouches", "clientY", "touchStart", "clientX", "lastDelta", "onTouchMove", "_ref3", "deltaX", "deltaY", "emitter", "emit", "type", "onTouchEnd", "inertia", "onWheel", "events", "callbacks", "i", "length", "slice", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "passive", "Lenis", "_temp", "direction", "gestureDirection", "mouseMultiplier", "smooth", "_ref$wrapper", "_ref$content", "_ref$wheelEventsTarge", "wheelEventsTarget", "_ref$smoothWheel", "smoothWheel", "_ref$smoothTouch", "smoothTouch", "_ref$syncTouch", "syncTouch", "_ref$syncTouchLerp", "syncTouchLerp", "_ref$touchInertiaMult", "touchInertiaMultiplier", "pow", "_ref$infinite", "infinite", "_ref$orientation", "orientation", "_ref$gestureOrientati", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "sign", "console", "warn", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "_temp2", "_this2", "_ref3$offset", "offset", "_ref3$immediate", "immediate", "_ref3$lock", "lock", "_ref3$duration", "_ref3$easing", "_ref3$lerp", "_ref3$onComplete", "onComplete", "_ref3$force", "force", "_ref3$programmatic", "includes", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "_ref4", "requestAnimationFrame", "remainder", "divisor", "__isSmooth", "set", "toggle", "__isScrolling", "__isStopped"]
}
